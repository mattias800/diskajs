{"version":3,"sources":["../../../../src/di/bindings/types/ProviderBinding.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAEqB,gBAAgB;;;;wBACjB,WAAW;;;;wBACV,gBAAgB;;;;IAEhB,eAAe;cAAf,eAAe;;AAIrB,aAJM,eAAe,CAIpB,aAAiB,EAAE;8BAJd,eAAe;;AAK5B,mCALa,eAAe,6CAKpB;AACR,YAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACtC;;iBAPgB,eAAe;;eAS7B,aAAC,QAAiB;kBAAjB,QAAiB,sIAAjB,QAAiB,qBAAjB,QAAiB,sBAAjB,QAAiB,eAAjB,QAAiB,2BAAjB,QAAiB;;AACjB,gBAAI,QAAQ,CAAC;AACb,oBAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC5C,gBAAI,EAAE,QAAQ,kCAAoB,AAAC,EAAE;AACjC,sBAAM,KAAK,CAAC,6CAA6C,CAAC,CAAC;aAC9D;AACD,mBAAO,QAAQ,CAAC,GAAG,EAAE,CAAC;SACzB;;;WAhBgB,eAAe;;;qBAAf,eAAe","file":"ProviderBinding.js","sourcesContent":["/* @flow */\n\nimport Provider from '../../Provider';\nimport Binding from './Binding';\nimport Injector from \"../../Injector\"\n\nexport default class ProviderBinding extends Binding {\n\n    ProviderClass:any;\n\n    constructor(ProviderClass:any) {\n        super();\n        this.ProviderClass = ProviderClass;\n    }\n\n    get(injector:Injector):any {\n        var provider;\n        provider = injector.get(this.ProviderClass);\n        if (!(provider instanceof Provider)) {\n            throw Error('toProvider() argument must extend Provider.');\n        }\n        return provider.get();\n    }\n}\n"]}