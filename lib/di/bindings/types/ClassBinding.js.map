{"version":3,"sources":["src/di/bindings/types/ClassBinding.js"],"names":[],"mappings":";;;;;;;;;;gCAA2B,yBAAyB;;IAEvC,YAAY;AAEV,aAFF,YAAY,CAET,QAAQ,EAAE;8BAFb,YAAY;;AAGjB,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;iBAJQ,YAAY;;eAMlB,aAAC,QAAQ,EAAE;AACV,gBAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzB,gBAAI,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;AACnC,sBAAM,KAAK,CAAC,kDAAkD,GAAG,IAAI,GAAG,oCAAoC,GAAG,IAAI,GAAG,gDAAgD,CAAC,CAAC;aAC3K;AACD,gBAAI,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,gBAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO,EAAK;AAClC,uBAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAChC,CAAC,CAAC;AACH,mBAAO,kBAjBP,YAAY,CAiBQ,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC3D;;;WAhBQ,YAAY;;;QAAZ,YAAY,GAAZ,YAAY","file":"src/di/bindings/types/ClassBinding.js","sourcesContent":["import {Instantiator} from '../../util/Instantiator';\n\nexport class ClassBinding {\n\n    constructor(TheClass) {\n        this.TheClass = TheClass;\n    }\n\n    get(injector) {\n        var type = this.TheClass;\n        if (typeof type.inject !== 'function') {\n            throw Error('Cannot inject dependencies into object of type \"' + type + '\". Add static method inject() to \"' + type + '\" that returns a list of types to be injected.');\n        }\n        var depsTypes = type.inject();\n        var deps = depsTypes.map((depType) => {\n            return injector.get(depType);\n        });\n        return Instantiator.createInstance(this.TheClass, deps);\n    }\n\n}\n"]}